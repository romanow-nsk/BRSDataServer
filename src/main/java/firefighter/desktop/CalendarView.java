/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package firefighter.desktop;

import firefighter.core.utils.OwnDateTime;

import java.awt.*;

/**
 *
 * @author romanow
 */
public class CalendarView extends javax.swing.JFrame {

    /**
     * Creates new form CalendarView
     */
    public CalendarView(final I_Calendar back) {
        this("",back);
        }
    public CalendarView(String title, final I_Calendar back) {
        initComponents();
        setTitle(title);
        L1.setVisible(false);
        L2.setVisible(false);
        Hour.setVisible(false);
        Minute.setVisible(false);
        setBounds(400,200,250,320);
        add(new CalendarPanel(new I_Calendar() {
            @Override
            public void onMonth(int daInMonth, int month, int year) { }
            @Override
            public void onDay(int day, int month, int year) {
                back.onDay(day,month,year);
                dispose();
                }
            @Override
            public void onDayRight(int day, int month, int year) { }
        }));
        setVisible(true);
        }
    public CalendarView(String title, final I_CalendarTime back) {
        initComponents();
        setTitle(title);
        setBounds(400,200,250,350);
        add(new CalendarPanel(new I_Calendar() {
            @Override
            public void onMonth(int daInMonth, int month, int year) { }
            @Override
            public void onDay(int day, int month, int year) {
                try {
                    int hh = Integer.parseInt(Hour.getText());
                    if (hh<0 || hh>23){
                        System.out.println("Недопустимый формат часов/минут");
                        return;
                        }
                    int mm = Integer.parseInt(Minute.getText());
                    if (mm<0 || mm>59){
                        System.out.println("Недопустимый формат часов/минут");
                        return;
                        }
                    OwnDateTime date = new OwnDateTime(day,month,year,hh,mm);
                    back.onSelect(date);
                    dispose();
                    } catch(Exception ee){ System.out.println("Недопустимый формат часов/минут");}
                }
            @Override
            public void onDayRight(int day, int month, int year) { }
        }));
        setVisible(true);
    }

    @Override
    public void print(Graphics g) {
        super.print(g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Minute = new javax.swing.JTextField();
        Hour = new javax.swing.JTextField();
        L2 = new javax.swing.JLabel();
        L1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        Minute.setText("00");
        Minute.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MinuteKeyPressed(evt);
            }
        });
        getContentPane().add(Minute);
        Minute.setBounds(100, 280, 30, 25);

        Hour.setText("00");
        Hour.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                HourKeyPressed(evt);
            }
        });
        getContentPane().add(Hour);
        Hour.setBounds(60, 280, 30, 25);

        L2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        L2.setText(":");
        getContentPane().add(L2);
        L2.setBounds(93, 283, 10, 17);

        L1.setText("Время");
        getContentPane().add(L1);
        L1.setBounds(10, 285, 50, 14);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HourKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HourKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_HourKeyPressed

    private void MinuteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MinuteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_MinuteKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalendarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalendarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalendarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalendarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalendarView(new I_Calendar() {
                    @Override
                    public void onMonth(int daInMonth, int month, int year) {
                        System.out.print(daInMonth+" "+month+" "+year);
                        }
                    @Override
                    public void onDay(int day, int month, int year) {
                        System.out.print(day+" "+month+" "+year);
                        }
                    @Override
                    public void onDayRight(int day, int month, int year) {
                        System.out.print(day+" "+month+" "+year);
                        }
                    }).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Hour;
    private javax.swing.JLabel L1;
    private javax.swing.JLabel L2;
    private javax.swing.JTextField Minute;
    // End of variables declaration//GEN-END:variables
}
